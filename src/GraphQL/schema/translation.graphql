"A JSON like data structure like `{en: User, hu: Felhasználó}`"
scalar ObjectScalar @scalar(class: "App\\GraphQL\\Scalars\\Core\\ObjectScalar")

extend type Query {
    allTranslation: [Translation!]! @all
    allLanguages: [Language!]! @cache

    viewTranslation(
        id: ID! @eq
    ): Translation! @can(ability: "view" find: "id") @find
}

extend type Query @guard(with: ["sanctum"]) {
    listTranslation(
        key: String @where(operator: "like")
        group: String @where(operator: "like")
        text: String @where(operator: "like")
    ): [Translation!]! 
    @can(ability: "viewAny" model: "MayIFit\\Core\\Translation\\Models\\Translation") 
    @paginate(type: "paginator")
}

extend type Mutation @guard(with: ["sanctum"]) {
    updateTranslation(input: UpdateTranslationInput! @spread): Translation 
        @can(ability: "update" find: "id") 
        @update

    createTranslation(input: CreateTranslationInput! @spread): Translation 
        @can(ability: "create" model: "MayIFit\\Core\\Translation\\Models\\Translation") 
        @create

    deleteTranslation(id: ID! @rules(apply: ["required"])): Translation 
        @can(ability: "delete" find: "id") 
        @delete
}

input UpdateTranslationInput {
    id: ID!
    group: String!
    key: String!
    text: ObjectScalar
}

input CreateTranslationInput {
    group: String!
    key: String!
    text: ObjectScalar
}

type Language {
    id: ID!
    language: String! @rename(attribute: "ISO6391")
    name: String
}

type Translation @modelClass(class: "\\MayIFit\\Core\\Translation\\Models\\Translation") {
    id: ID!
    key: String!
    group: String!
    text: ObjectScalar
}